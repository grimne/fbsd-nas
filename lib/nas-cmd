#!/bin/sh

CMD_VALID_LIST="disk,encrypt,zpool,zfs"
CMD_VALID_LIST="${CMD_VALID_LIST},version,help,usage"


cmd::parse_info(){
    local _cmd

    cmd::find "_cmd" "$1" "${CMD_VALID_LIST}"

    case "${_cmd}" in
        version)    util::version && exit ;;
        usage)      util::usage ;;
        help)       util::usage ;;
    esac
}


cmd::parse(){
    local _cmd

    # try to find a matching command
    cmd::find "_cmd" "$1" "${CMD_VALID_LIST}" || util::usage
    shift

    # almost all our functionality requires access to things only root can do
   [ `id -u` -ne 0 ] && util::err "ZFS and disk management can only be managed by root"

    case "${_cmd}" in
        disk)       cmd::parse_disk "$@" ;;
        encrypt)    cmd::parse_encrypt "$@" ;;
        zpool)      cmd::parse_zpool "$@" ;;

        *)         util::err "unknown command '${_user_cmd}'. please run 'nas usage'" ;;
    esac
}


cmd::parse_disk(){
    local _cmd

    # try to find a matching command
    cmd::find "_cmd" "$1" "usage,help,list,wipe,partition,label,dummyboot,hotswap" || util::usage
    shift

    case "${_cmd}" in
        list)       disk::list ;;
        wipe)       disk::wipe "$@" ;;
        partition)  disk::partition "$@" ;;
        label)      disk::label "$@" ;;
        dummyboot)  disk::dummy_boot_code "$@" ;;
        hotswap)    disk::hotswap "$@" ;;
        *)          util::err "unknown command '${_user_cmd}'. please run 'nas usage'" ;;
    esac
}


cmd::parse_encrypt(){
    local _cmd

    # try to find a matching command
    cmd::find "_cmd" "$1" "usage,help,init,disk,attach" || util::usage
    shift

    case "${_cmd}" in
        init)   encryption::init "$@" ;;
        disk)   encryption::disk "$@" ;;
        attach) encryption::attach "$@" ;;
        *)      util::err "unknown command '${_user_cmd}'. please run 'nas usage'" ;;
    esac
}


cmd::parse_zpool(){
    local _cmd

    # try to find a matching command
    cmd::find "_cmd" "$1" "usage,help,list,create" || util::usage
    shift

    case "${_cmd}" in
        list)   zpool::list ;;
        create) zpool::create "$@" ;;
        *)      util::err "unknown command '${_user_cmd}'. please run 'nas usage'" ;;
    esac
}


cmd::find(){
    local _var="$1"
    local _user_cmd="$2"
    local _valid="$3"
    local _opt _choice _found=""
    local IFS=","

    [ -n "${_user_cmd}" ] || util::err "no command specified. See usage"

    for _opt in ${_valid}; do
        # exact match?
        if [ "${_user_cmd}" = "${_opt}" ]; then
            setvar "${_var}" "${_opt}"
            return 0
        fi

        if echo "${_opt}" | grep -iqs "^${_user_cmd}"; then
           [ -n "${_found}" ] && util::err "ambiguous command '${_user_cmd}'"

           _found=1
           _choice="${_opt}"
        fi
    done

    [ -z "${_found}" ] && return 1
    setvar "${_var}" "${_choice}"
}
